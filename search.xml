<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Linux磁盘管理</title>
      <link href="/2021/07/14/Linux%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86/"/>
      <url>/2021/07/14/Linux%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux磁盘管理"><a href="#Linux磁盘管理" class="headerlink" title="Linux磁盘管理"></a>Linux磁盘管理</h1><h2 id="1-磁盘的分类及特点"><a href="#1-磁盘的分类及特点" class="headerlink" title="1. 磁盘的分类及特点"></a>1. 磁盘的分类及特点</h2><p>[TOC]</p><h4 id="1-1-磁盘的分类"><a href="#1-1-磁盘的分类" class="headerlink" title="1.1 磁盘的分类"></a>1.1 磁盘的分类</h4><ul><li>机械硬盘hdd—容量大，价格便宜速度慢 ；</li><li>固态硬盘sdd—容量小，价格较贵速度快；</li></ul><h4 id="1-2-磁盘接口"><a href="#1-2-磁盘接口" class="headerlink" title="1.2 磁盘接口"></a>1.2 磁盘接口</h4><ul><li><p>IDE（Integrated Drive Electronics）</p><p><img src= "/img/loading.gif" data-src="https://exp-picture.cdn.bcebos.com/e9a4f2eeadbcbe2fb5bfecad54dae43b3a867865.jpg?x-bce-process=image/resize,m_lfit,w_500,limit_1/format,f_jpg/quality,q_80" alt="硬盘的接口种类"></p><ul><li>本意是指把“硬盘控制器”与“盘体”集成在一起的硬盘驱动器；</li><li>优点：价格低廉兼容性好；</li></ul></li><li><p>SCSI（Small Computer System Interface ）</p><p><img src= "/img/loading.gif" data-src="https://exp-picture.cdn.bcebos.com/edafb3bcbe2f4770b5d7756f6f3b3b8603217965.jpg?x-bce-process=image/resize,m_lfit,w_500,limit_1/format,f_jpg/quality,q_80" alt="硬盘的接口种类"></p><ul><li>不是专门为硬盘设计的，而是一种总线型的系统接口；</li><li>优点：适应面广高性能同时具备内、外置；</li></ul></li><li><p>FC（Fibre Channel ）</p><p><img src= "/img/loading.gif" data-src="https://exp-picture.cdn.bcebos.com/51cd85cec7f88a772f0d22f96e4a2f27e6eff865.jpg?x-bce-process=image/resize,m_lfit,w_500,limit_1/format,f_jpg/quality,q_80" alt="硬盘的接口种类"></p><ul><li>FC最初是专门为网络系统设计的随着存储系统对速度的需求，逐渐应用到硬盘系统中；</li><li>优点：带宽高、连接距离长、连接设备数量大；</li></ul></li><li><p>SATA（Serial ATA ）</p><p><img src= "/img/loading.gif" data-src="http://www.dnpz.net/uploads/allimg/180122/983-1P1221054295Z.jpg" alt="电脑硬件知识：带你了解硬盘的各种接口类型"></p><ul><li>是一种完全不同于并行ATA的新型硬盘接口类型，由于采用串行方式传输数据而得名；</li><li>优点：一对一连接，独享带宽、支持热插拔、低电压信号、带宽升级潜力大；</li></ul></li><li><p>SAS（Serial Attached SCSI ） </p><p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/img_convert/4101dfdf9cf599b1de7b5314b0861421.png" alt="image"></p><ul><li><p>即串行连接SCSI，是新一代的SCSI技术，和SATA相同，都是采用串行技术以获得更高的传输速度，并通过缩短连接线改善内部空间 </p></li><li><p>优点：兼容性好、数据传输率高；</p></li></ul><p>搭配方式：</p><p>SSD+SAS==》土豪</p><p>SSD+SATA==》常规，对速度有特殊要求</p><p>机械+SAS==》常规，对速度要求一般，比较核心业务使用</p><p>机械+SATA==》公司内部服务</p></li></ul><h4 id="1-3-磁盘性能指标"><a href="#1-3-磁盘性能指标" class="headerlink" title="1.3 磁盘性能指标"></a>1.3 磁盘性能指标</h4><ul><li>容量<ul><li>家用：1T、2T……</li><li>企业: 300G、600G、900G……</li></ul></li><li>转速<ul><li>家用：4.5k\7.2krpm</li><li>企业：7.2k、10k、15k</li></ul></li><li>缓存</li></ul><h4 id="1-4-磁盘组成"><a href="#1-4-磁盘组成" class="headerlink" title="1.4 磁盘组成"></a>1.4 磁盘组成</h4><table><thead><tr><th align="center">磁盘知识点</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">磁头 header</td><td align="center">读取或写入数据,移动只能是径向方法,磁头是从0开始,磁头数==盘面数</td></tr><tr><td align="center">磁道tracker</td><td align="center">当磁盘旋转时，磁头若保持在一个位置上，则每个磁头都会在磁盘表面划出一个圆形轨迹，这些圆形轨迹就叫做磁道。</td></tr><tr><td align="center">扇区sector</td><td align="center">扇区，是指磁盘上划分的区域。磁盘上的每个磁道被等分为若干个弧段，这些弧段便是磁盘的扇区，硬盘的读写以扇区为基本单位，从1开始</td></tr><tr><td align="center">柱面cylinder</td><td align="center">硬盘通常由重叠的一组盘片构成，每个盘面都被划分为数目相等的磁道，并从外缘的“0”开始编号，具有相同编号的磁道形成一个圆柱，称之为磁盘的柱面</td></tr></tbody></table><ul><li><p>扇区（512KB）是磁盘读取的基本单位</p></li><li><p>block（4KB）是系统层面上面读写数据的单位 </p></li></ul><p><img src= "/img/loading.gif" data-src="../AppData/Roaming/Typora/typora-user-images/image-20210330201437498.png" alt="image-20210330201437498"></p><h2 id="2-RAID独立冗余磁盘阵列"><a href="#2-RAID独立冗余磁盘阵列" class="headerlink" title="2. RAID独立冗余磁盘阵列"></a>2. RAID独立冗余磁盘阵列</h2><h4 id="2-1-概念"><a href="#2-1-概念" class="headerlink" title="2.1 概念"></a>2.1 概念</h4><p>简单的说，RAID是一种把多块独立的硬盘（物理硬盘）按不同的方式组 合起来形成一个硬盘组（逻辑硬盘），从而提高存储性能和容错功能。</p><h4 id="2-2-raid级别"><a href="#2-2-raid级别" class="headerlink" title="2.2 raid级别"></a>2.2 raid级别</h4><ul><li><p><em>raid0</em></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">容量：N块盘合在一起的容量；</span><br><span class="line">性能：理论上是N块盘合在一起的读写速度，实际上是略低一些；</span><br><span class="line">冗余性：不允许坏任何一块硬盘，一块坏，全部gg;</span><br><span class="line">场合：追求读写性能，但对数据安全性无要求；</span><br><span class="line">特点:追求速度，不考虑数据安全；</span><br><span class="line">ps:可以考虑用集群服务器</span><br></pre></td></tr></table></figure></li><li><p><em>raid1</em></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">至少2快盘</span><br><span class="line">容量：一块盘的容量</span><br><span class="line">性能：几乎就是一块盘的读写速度</span><br><span class="line">冗余性：可以坏一块盘，另外一块盘有完整的数据；一块存数据，一块备份数据（备份过）</span><br><span class="line">场合：对数据安全性有要求，对读写速度没有要求</span><br><span class="line">特点:追求数据安全，不考虑速度</span><br><span class="line">ps:主要用于服务器的系统盘</span><br></pre></td></tr></table></figure></li><li><p><em>raid5</em>(结余raid0与raid1之间，是一种折中的方案)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">至少三块盘，两两之间做奇偶校验，相同结果为0，不同结果为1</span><br><span class="line">容量：以三快盘为例，只有两块容量可用，一块作为校验</span><br><span class="line">性能：读写速度低于raid0，高于raid1</span><br><span class="line">冗余性：可以坏一块盘，其余两块可通过奇偶校验推导出坏盘的数据</span><br><span class="line">场合：一般场合都可使用</span><br><span class="line">ps:兼顾了速度和安全性</span><br></pre></td></tr></table></figure></li><li><p><em>raid10</em>(raid1和raid0整合的产物，兼顾了raid1的数据安全性和raid0的性能，成本高)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">至少4块</span><br><span class="line">容量：所有容量的一半</span><br><span class="line">性能：读写速度很快</span><br><span class="line">冗余性：可以损坏一半，但损毁的的不能再一组</span><br><span class="line">场合：</span><br><span class="line">ps:性能和冗余很好的业务。数据库主库和存储的主节点</span><br></pre></td></tr></table></figure></li><li><p>冗余 raid1 raid10 raid5 raid0</p></li><li><p>读写性能 raid0 raid10 raid5 raid1</p></li><li><p>成本 raid0、raid5、raid1、raid10</p></li></ul><h2 id="3-磁盘分区"><a href="#3-磁盘分区" class="headerlink" title="3. 磁盘分区"></a>3. 磁盘分区</h2><p><strong>1.分区表</strong></p><ul><li>MBR</li></ul><p>磁盘主引导记录 0磁头0磁道1扇区 大小512k</p><p>磁盘分区表结构：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">446bytes:</span><br><span class="line">主引导记录MBR所在地址；</span><br><span class="line">64bytes:</span><br><span class="line">磁盘分区信息 DPT，磁盘分区表；</span><br><span class="line">2bytes:</span><br><span class="line">55AA,分区信息结束 DPT 磁盘分区表；</span><br></pre></td></tr></table></figure><ul><li><p>GPT</p><ul><li>mbr升级版</li><li>主分区足够用</li><li>可支持大容量硬盘</li></ul><p>区别:</p></li></ul><table><thead><tr><th align="center">gpt</th><th align="center">mbr</th></tr></thead><tbody><tr><td align="center">主分区数量不限</td><td align="center">主分区最多4个扩展分区1个</td></tr><tr><td align="center">可额外支持大容量2tb以上硬盘</td><td align="center">mbr只支持2tb以内的硬盘</td></tr></tbody></table><ul><li>主分区p：存放数据，必须拥有；</li><li>扩展分区e：用来给逻辑分区创造空间；</li><li>逻辑分区l：在扩展分区下面，进行创建，使用扩展分区空间；</li></ul><p><em><strong>2.询磁盘信息</strong></em></p><p>一般查询磁盘信息主要查看这三个指标</p><ul><li>使用率</li><li>当前读写速度</li><li>其它信息</li></ul><p>1.df命令 ： 查看当前磁盘容量使用率（不用参数以k为单位）；</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">df -i #查看inode使用情况</span><br><span class="line">df -h #以人性化方式显示</span><br><span class="line">df -T  #查看磁盘分区类型（文件系统类型）</span><br><span class="line"></span><br><span class="line">[root@yum_server_100 /]# df -i</span><br><span class="line">Filesystem                Inodes IUsed    IFree IUse% Mounted on</span><br><span class="line">devtmpfs                  121457   393   121064    1% /dev</span><br><span class="line">tmpfs                     124460     1   124459    1% /dev/shm</span><br><span class="line">tmpfs                     124460   765   123695    1% /run</span><br><span class="line">tmpfs                     124460    16   124444    1% /sys/fs/cgroup</span><br><span class="line">/dev/mapper/centos-root 26214400 47406 26166994    1% /</span><br><span class="line">/dev/mapper/centos-home 24637440    13 24637427    1% /home</span><br><span class="line">/dev/sde1                 524288   326   523962    1% /boot</span><br><span class="line">tmpfs                     124460     1   124459    1% /run/user/0</span><br><span class="line">[root@yum_server_100 /]# </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">root@yum_server_100 /]# df -h</span><br><span class="line">Filesystem               Size  Used Avail Use% Mounted on</span><br><span class="line">devtmpfs                 475M     0  475M   0% /dev</span><br><span class="line">tmpfs                    487M     0  487M   0% /dev/shm</span><br><span class="line">tmpfs                    487M  7.6M  479M   2% /run</span><br><span class="line">tmpfs                    487M     0  487M   0% /sys/fs/cgroup</span><br><span class="line">/dev/mapper/centos-root   50G   14G   37G  27% /</span><br><span class="line">/dev/mapper/centos-home   47G   33M   47G   1% /home</span><br><span class="line">/dev/sde1               1014M  137M  878M  14% /boot</span><br><span class="line">tmpfs                     98M     0   98M   0% /run/user/0</span><br><span class="line"></span><br><span class="line">[root@yum_server_100 /]# df -T</span><br><span class="line">Filesystem              Type     1K-blocks     Used Available Use% Mounted on</span><br><span class="line">devtmpfs                devtmpfs    485828        0    485828   0% /dev</span><br><span class="line">tmpfs                   tmpfs       497840        0    497840   0% /dev/shm</span><br><span class="line">tmpfs                   tmpfs       497840     7768    490072   2% /run</span><br><span class="line">tmpfs                   tmpfs       497840        0    497840   0% /sys/fs/cgroup</span><br><span class="line">/dev/mapper/centos-root xfs       52403200 13739376  38663824  27% /</span><br><span class="line">/dev/mapper/centos-home xfs       49250820    33044  49217776   1% /home</span><br><span class="line">/dev/sde1               xfs        1038336   140076    898260  14% /boot</span><br><span class="line">tmpfs                   tmpfs        99572        0     99572   0% /run/user/0</span><br></pre></td></tr></table></figure><p>2.使用lsblk查看分区情况</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@yum_server_100 /]# lsblk</span><br><span class="line">NAME            MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT</span><br><span class="line">sda               8:0    0    1G  0 disk </span><br><span class="line">sdb               8:16   0    1G  0 disk </span><br><span class="line">└─sdb1            8:17   0  100M  0 part </span><br><span class="line">sdc               8:32   0    1G  0 disk </span><br><span class="line">sdd               8:48   0    3T  0 disk </span><br><span class="line">sde               8:64   0  100G  0 disk </span><br><span class="line">├─sde1            8:65   0    1G  0 part /boot</span><br><span class="line">└─sde2            8:66   0   99G  0 part </span><br><span class="line">  ├─centos-root 253:0    0   50G  0 lvm  /</span><br><span class="line">  ├─centos-swap 253:1    0    2G  0 lvm  [SWAP]</span><br><span class="line">  └─centos-home 253:2    0   47G  0 lvm  /home</span><br><span class="line">sr0              11:0    1  3.7G  0 rom  </span><br><span class="line">sr1              11:1    1  4.5G  0 rom  </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>3.使用du命令查看目录或者文件容量，不参加以k为单位</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">du -sh #人性化输出显示大小</span><br><span class="line">-s :summary 总结，汇总列出总和</span><br><span class="line">-h:人性化显示容量信息，人类可读 </span><br></pre></td></tr></table></figure><p>4.iotop  显示当前硬盘读取速度</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">iotop #显示磁盘io</span><br><span class="line">iotop -o 只显示进行读写进程信息</span><br><span class="line">dd if=/dev/zero  of=/tmp/big    bs=1k  count=10000000</span><br></pre></td></tr></table></figure><h4 id="3-1-fdisk-分区"><a href="#3-1-fdisk-分区" class="headerlink" title="3.1 fdisk 分区"></a>3.1 fdisk 分区</h4><ul><li><p>fdisk :这个命令是磁盘分区表操作工具，fdisk能将磁盘分区，同时也能为每个分区指定分区类型，总的来说，fdisk就是磁盘工具。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">fdisk -l#查看硬盘分区表</span><br><span class="line"><span class="meta">#</span><span class="bash"> fdisk -l</span></span><br><span class="line">  Device Boot      Start         End      Blocks   Id  System</span><br><span class="line">/dev/sdb1            2048      206847      102400   83  Linux</span><br><span class="line">/dev/sdb2          206848      616447      204800   83  Linux</span><br><span class="line">/dev/sdb3          616448     1230847      307200    5  Extended</span><br><span class="line">/dev/sdb5          618496      638975       10240   83  Linux</span><br><span class="line">/dev/sdb6          641024      661503       10240   83  Linux</span><br><span class="line">/dev/sdb7          663552      684031       10240   83  Linux</span><br><span class="line">/dev/sdb8          686080      890879      102400    c  W95 FAT32 (LBA)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>fdisk /dev/sdb 分区</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">[root@yum_server_100 /]# fdisk /dev/sdb</span><br><span class="line"><span class="meta">#</span><span class="bash">进入Command 分区命令行；如果输入错误用ctrl+u进行删除重新输入命令</span></span><br><span class="line">Welcome to fdisk (util-linux 2.23.2).</span><br><span class="line"></span><br><span class="line">Changes will remain in memory only, until you decide to write them.</span><br><span class="line">Be careful before using the write command.</span><br><span class="line"></span><br><span class="line">Device does not contain a recognized partition table</span><br><span class="line">Building a new DOS disklabel with disk identifier 0xe42d9531.</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> p -- 展示指定硬盘已有分区（目前没有增加分区）</span></span><br><span class="line">Command (m for help): p</span><br><span class="line">Disk /dev/sdc: 1073 MB, 1073741824 bytes, 2097152 sectors</span><br><span class="line">Units = sectors of 1 * 512 = 512 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class="line">Disk label type: dos</span><br><span class="line">Disk identifier: 0xe42d9531</span><br><span class="line"></span><br><span class="line">   Device Boot      Start         End      Blocks   Id  System</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> n--在硬盘中新增一个主分区</span></span><br><span class="line">Command (m for help): n</span><br><span class="line"><span class="meta">#</span><span class="bash"> 会有选p主分区 e扩展分区 默认空白是p主分区</span> </span><br><span class="line">Partition type:</span><br><span class="line">   p   primary (0 primary, 0 extended, 4 free)</span><br><span class="line">   e   extended</span><br><span class="line">Select (default p): p</span><br><span class="line">Partition number (1-4, default 1): 1  #分区编号默认编号1</span><br><span class="line">First sector (2048-2097151, default 2048): #选择分区开始位置这里忽略只在意结束位置（大小）</span><br><span class="line">Using default value 2048</span><br><span class="line">Last sector, +sectors or +size&#123;K,M,G&#125; (2048-2097151, default 2097151): +100M #指定分区大小</span><br><span class="line">Partition 1 of type Linux and of size 100 MiB is set  #成功！！！</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">分区后 p展示分区信息</span></span><br><span class="line">Command (m for help): p</span><br><span class="line">  Device Boot      Start         End      Blocks   Id  System</span><br><span class="line">/dev/sdc1            2048      206847      102400   83  Linux</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#同理要想建立扩展分区 在n之后选择e即可 扩展分区建立后 才能建立逻辑分区</span></span> </span><br><span class="line"></span><br><span class="line">d 删除分区</span><br><span class="line">t 将分区换类型</span><br></pre></td></tr></table></figure></li></ul><h4 id="3-2-parted分区"><a href="#3-2-parted分区" class="headerlink" title="3.2 parted分区"></a>3.2 parted分区</h4><p><strong>一.parted的用用途及说明：</strong></p><ul><li>parted ：parted分区是fdisk分区升级版本，可以划分多个主分，支持2TB以上的磁盘分区，并且允许调整分区的大小。</li><li>parted是一个用于硬盘分区或调整分区大小的工具。使用它你可以创建、清除、调整、移动和复制ext2、ext3、linux-swap、FAT、FAT32和reiserfs分区；也能创建、调整和移动苹果系统的HFS分区；还能检测jfs、ntfs、ufs和xfs分区。该工具常用于为新安装的操作系统创建空间，重新分配硬盘使用情况，在将数据拷贝到新硬盘的时候也常常使用。</li></ul><p><strong>二.parted的使用方法及步骤</strong></p><p>1.对磁盘进行分区</p><p>(1) 命令方式：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">parted /dev/sdb mklabel gpt mkpart 1 ext3 1 1T</span><br></pre></td></tr></table></figure><p>(2)交互式：</p><ul><li>命令：</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">p (print)     #显示磁盘分区信息</span><br><span class="line">mktable #创建磁盘分区表 gpt/msdos</span><br><span class="line">mkpart #创建磁盘分区 mkpart primary 0 100</span><br><span class="line">rm #删除磁盘分区</span><br><span class="line">q #quit</span><br></pre></td></tr></table></figure><ul><li>分区步骤:</li></ul><table><thead><tr><th align="left">命令</th><th align="left">解释</th></tr></thead><tbody><tr><td align="left">#parted  /dev/sdb</td><td align="left">对/dev/sdb进行分区或管理操作</td></tr><tr><td align="left">GNU Parted 3.1<br/>Using /dev/sda<br/>Welcome to GNU Parted! Type ‘help’ to view a list of commands.</td><td align="left">系统返回值</td></tr><tr><td align="left">(parted)   mklabel  gpt</td><td align="left">定义分区表格式常用的有msdos和gpt分区表格式，msdos不支持2TB以上（常用的有msdos和gpt分区表格式，msdos不支持2TB以上容量的磁盘，所以大于2TB的磁盘选gpt分区表格式）</td></tr><tr><td align="left">(parted) mkpart p1</td><td align="left">创建第1个分区，名称为p1</td></tr><tr><td align="left">File system type?  [ext2]?</td><td align="left">定义分区格式（不支持ext4，想分ext4格式分区，可以通过mkfs.ext4格式化ext4格式）</td></tr><tr><td align="left">Start？  1</td><td align="left">定义分区的起始位置（单位支持K,M,G,T）</td></tr><tr><td align="left">End？  1G</td><td align="left">定义分区的结束位置（单位支持K,M,G,T）</td></tr><tr><td align="left">(parted)   print</td><td align="left">查看当前分区情况</td></tr><tr><td align="left">Model: VMware, VMware Virtual S (scsi)<br/>Disk /dev/sda: 1074MB<br/>Sector size (logical/physical): 512B/512B<br/>Partition Table: gpt<br/>Disk Flags: <br/><br/>Number  Start   End     Size    File    system  Name  Flags<br/> 1      1049kB  1073MB      1072MB</td><td align="left">系统返回值</td></tr></tbody></table><ul><li>删除分区步骤：</li></ul><table><thead><tr><th>(parted)   rm</th><th>rm删除命令(删除前必须检查是否挂载)</th></tr></thead><tbody><tr><td>Partition number？ 1</td><td>删除第一个分区</td></tr><tr><td>(parted)   print</td><td>查看当前分区情况</td></tr><tr><td>(parted)   print</td><td>查看当前分区情况</td></tr><tr><td>Model:   ATA VBOX HARDDISK (scsibr/Disk   /dev/sda: 21.5GB<br/><br/>Sector   size (logical/physical): 512B/512B<br/><br/>Partition   Table: msdos<br/><br/>Number  Start     End   Size  File system  Name  Flags<br/></td><td>系统返回值</td></tr></tbody></table><h2 id="4-挂载与格式化"><a href="#4-挂载与格式化" class="headerlink" title="4. 挂载与格式化"></a>4. 挂载与格式化</h2><p><strong>挂载三部曲：</strong></p><ul><li>磁盘分区：fdisk、parted、gdisk；</li><li>格式化：创建文件系统（使磁盘可以存储文件）；</li><li>挂载：设置设备入口，给用户访问·。</li></ul><h4 id="4-1-第一部—创建磁盘分区"><a href="#4-1-第一部—创建磁盘分区" class="headerlink" title="4.1 第一部—创建磁盘分区"></a>4.1 第一部—创建磁盘分区</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">fdisk  </span><br><span class="line">n</span><br><span class="line">Disk /dev/sdb: 1073 MB, 1073741824 bytes, 2097152 sectors</span><br><span class="line">Units = sectors of 1 * 512 = 512 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class="line">Disk label type: dos</span><br><span class="line">Disk identifier: 0xc2483040</span><br><span class="line">   Device Boot     Start         End     Blocks   Id </span><br><span class="line">System</span><br><span class="line">/dev/sdb1            2048     2097151     1047552   83 </span><br><span class="line">Linux</span><br></pre></td></tr></table></figure><h4 id="4-2-第二部—格式化创建文件系统"><a href="#4-2-第二部—格式化创建文件系统" class="headerlink" title="4.2 第二部—格式化创建文件系统"></a>4.2 第二部—格式化创建文件系统</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> mkf.xfs /dev/sdb1</span> </span><br><span class="line">meta-data=/dev/sdb1              isize=512    agcount=4, </span><br><span class="line">agsize=65472 blks</span><br><span class="line">         =                       sectsz=512   attr=2, </span><br><span class="line">projid32bit=1</span><br><span class="line">         =                       crc=1        finobt=0, </span><br><span class="line">sparse=0</span><br><span class="line">data     =                       bsize=4096   </span><br><span class="line">blocks=261888, imaxpct=25</span><br><span class="line">         =                       sunit=0      swidth=0</span><br><span class="line">blks</span><br><span class="line">naming   =version 2              bsize=4096   ascii-ci=0</span><br><span class="line">ftype=1</span><br><span class="line">log      =internal log           bsize=4096   blocks=855, </span><br><span class="line">version=2</span><br><span class="line">         =                       sectsz=512   sunit=0</span><br><span class="line">blks, lazy-count=1</span><br><span class="line">realtime =none                   extsz=4096   blocks=0, </span><br><span class="line">rtextents=0</span><br></pre></td></tr></table></figure><h4 id="4-3-第三部—挂载"><a href="#4-3-第三部—挂载" class="headerlink" title="4.3 第三部—挂载"></a>4.3 第三部—挂载</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mount 设备 入口</span><br><span class="line">mount /d v/sdb1   /mnt  </span><br><span class="line">[root@oldboyedu ~]# mount /de/sdb1 /mnt/</span><br><span class="line">[root@oldboyedu ~]# df -h</span><br><span class="line">Filesystem               Size Used Avail Use% Mounted on</span><br><span class="line">devtmpfs                 475M     0 475M   0% /dev</span><br><span class="line">tmpfs                   487M     0 487M   0% /dev/shm</span><br><span class="line">tmpfs                   487M  7.7M 479M   2% /run</span><br><span class="line">tmpfs                   487M     0 487M   0% </span><br><span class="line">/sys/fs/cgroup</span><br><span class="line">/dev/mapper/centos-root   37G   16G   22G  43% /</span><br><span class="line">/dev/sda1               1014M 137M 878M  14% /boot</span><br><span class="line">tmpfs                     98M     0   98M   0% </span><br><span class="line">/run/user/0</span><br><span class="line">/dev/sdb1               1020M   33M 988M   4% /mnt</span><br></pre></td></tr></table></figure><h4 id="4-4-永久挂载"><a href="#4-4-永久挂载" class="headerlink" title="4.4 永久挂载"></a>4.4 永久挂载</h4><p>上述挂载方式为临时挂载方式接下来介绍两种永久挂载方式：</p><ul><li>方法一：通用写法，把挂载命令写到开机执行，开机启动文件 /etc/rc.d/rc.loacl</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/rc.d/rc.local</span><br><span class="line">把挂载命令写到开机执行文件上</span><br><span class="line">mount /dev/sdb /mount</span><br><span class="line">chmod +x /etc/rc.d/rc.local</span><br></pre></td></tr></table></figure><ul><li>方法二：专业写法，开机开机自动挂载信息表    /etc/fstab</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">/etc/fstab文件内容格式说明</span><br><span class="line">/dev/mapper/centos-root /                       xfs     defaults        0 0</span><br><span class="line">UUID=0b6d9742-6dc9-434e-acb3-88d46bc5210c /boot                   xfs     defaults        0 0</span><br><span class="line">/dev/mapper/centos-home /home                   xfs     defaults        0 0</span><br><span class="line">/dev/mapper/centos-swap swap                    swap    defaults        0 0</span><br><span class="line"></span><br><span class="line">弟1列：备名称、uuid</span><br><span class="line">第2列：挂载点</span><br><span class="line">第3列：文件系统类型</span><br><span class="line">第4列：挂载选项</span><br><span class="line">第5列：是否备份</span><br><span class="line">第6列：是否开机检查</span><br></pre></td></tr></table></figure><h2 id="5-SWAP"><a href="#5-SWAP" class="headerlink" title="5. SWAP"></a>5. SWAP</h2><ul><li>swap 交换分区，内存不足时将物理内存充当临时内存。</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">通过创建文件增加swap</span><br><span class="line">1）创建文件 dd  if=/dev/zero  of=/tmp/swap  bs=1M count=500</span><br><span class="line">2)转换为swap  mkswap /tmp/swap</span><br><span class="line">3)激活  swapon /tmp/swap</span><br><span class="line"></span><br><span class="line">free -h 查看系统内存情况</span><br><span class="line">swapon -s 查看当前系统swap组成</span><br></pre></td></tr></table></figure><ul><li><p>永久生效</p><ul><li>swapon /tmp/swap 命令写到 /etc/rc.local</li><li>将swap分区属性写到 /etc/fstab</li></ul></li><li><p>umount /mnt 卸载</p></li><li><p>umount -lf 强制卸载</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux基础 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Linux用户管理</title>
      <link href="/2021/07/13/Linux%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86/"/>
      <url>/2021/07/13/Linux%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h1 id="用户管理"><a href="#用户管理" class="headerlink" title="用户管理"></a>用户管理</h1><p>[TOC]</p><hr><h2 id="1-用户和用户组的概念"><a href="#1-用户和用户组的概念" class="headerlink" title="1 用户和用户组的概念"></a>1 用户和用户组的概念</h2><ol><li><strong>用户概念：</strong></li></ol><p>在linux中一切都是文件（文件夹和硬件设备是特殊的文件)，如果有可能尽量使用文本文件。文本文件是人和机器能理解的文件，也成为人和机器进行交流的最好途径。由于所有的配置文件都是文本，所以你只需要一个最简单的编辑器就可以修改。由于修改文本文件如此简单，所以Linux系统本身肯定要加以规范。这就引出了用户(组)和权限这2个概念。而这2个概念的引入，完美的保证了Linux的安全性，同时没有添加复杂性。由于一切皆为文件。所以Linux引入了3个文件来管理用户（组）， /etc/passwd存放用户信息，/etc/shadow存放用户密码信息，/etc/group存放组信息，然后在文件系统中的每个文件的文件头里面添加了用户和文件之间的关系信息。</p><ol start="2"><li><p><strong>用户、组、文件有三种关系：</strong></p><ul><li><p>用户和文件的关系只有2种：拥有和不拥有。</p></li><li><p>组合文件的关系只有2种：拥有和不拥有。</p></li><li><p>组和用户的关系只有2种：属于和不属于。</p></li></ul></li><li><p><strong>将这三种关系叠加，用户和文件的最终关系可以归纳为3类：</strong></p><ul><li><p>用户拥有该文件。</p></li><li><p>用户属于哪个组，某个组拥有该文件（既用户通过属于某个组拥有该文件）。</p></li><li><p>用户不拥有该文件。</p></li></ul></li><li><p><strong>用户分类：</strong></p></li></ol><table><thead><tr><th>用户分类</th><th>作用</th><th>特定</th></tr></thead><tbody><tr><td>超级用户root (uid == 0)</td><td>管理维护整个系统</td><td>最高管理权限</td></tr><tr><td>普通用户(uid &gt;= 1000)</td><td>只能查看和管理自己的一亩三分地</td><td>管理特定服务,为了安全</td></tr><tr><td>程序用户(uid&gt;200 &amp;&amp; uid&lt;1000)</td><td>让Linux下面服务正常运行所需要</td><td>为了服务正常运行所需要并不需要登录到系统设置密码切换密、切换用户</td></tr></tbody></table><ol start="5"><li><strong>用户组概念</strong>：</li></ol><p>每个用户都有一个用户组，系统可以对一个用户组中的所有用户进行集中管理。不同Linux 系统对用户组的规定有所不同，如Linux下的用户属于与它同名的用户组，这个用户组在创建用户时同时创建。</p><ol start="6"><li><strong>用户组的分类:</strong><ul><li>默认组： 创建与用户组同名的组；</li></ul></li></ol><ul><li>基本组：主要的组；    -g 指定；<ul><li>附加组：额外指定的组；    -G 指定；</li></ul></li></ul><hr><h2 id="2-用户和用户组信息的查看"><a href="#2-用户和用户组信息的查看" class="headerlink" title="2. 用户和用户组信息的查看"></a>2. 用户和用户组信息的查看</h2><table><thead><tr><th>用户分类</th><th>作用</th><th>特定</th></tr></thead><tbody><tr><td>超级用户root (uid == 0)</td><td>管理维护整个系统</td><td>最高管理权限</td></tr><tr><td>普通用户(uid &gt;= 1000)</td><td>只能查看和管理自己的一亩三分地</td><td>管理特定服务,为了安全</td></tr><tr><td>程序用户(uid&gt;200 &amp;&amp; uid&lt;1000)</td><td>让Linux下面服务正常运行所需要</td><td>为了服务正常运行所需要并不需要登录到系统设置密码切换密、切换用户</td></tr></tbody></table><ol><li><strong>查看用户信息命令：<em>cat /etc/passwd</em></strong></li></ol><ul><li><p>/etc/passwd;  用户信息;</p></li><li><p>root:X:0:0:root:/root:/bin/bash  以冒号为分隔符;</p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">字段1：用户名  --&gt; root</span><br><span class="line">字段2：密码占位符  --&gt; x （这里都是用x代替）</span><br><span class="line">字段3：uid，用户id  --&gt; 0</span><br><span class="line">字段4：gid ，组id --&gt; 0</span><br><span class="line">字段5：用户描述信息  --&gt; root</span><br><span class="line">字段6：家目录  --&gt;  /root</span><br><span class="line">字段7：登录 shell（用户登陆shell ，当为/bin/bash表示可以登陆，/sbin/nologin表示不被授权登陆）</span><br></pre></td></tr></table></figure><p><font color='red'>注：</font>一般来说，只有 root 用户的 uid 是为0的。如果黑客把一个普通用户的 uid 修改为0的话，那么他只要以普通用户的用户名和密码登录，系统就会自动切换到root用户。所以，系统加固的时候一定要过滤出有哪些用户的UID为0</p><ol start="2"><li><strong>查看用户密码信息命令：<em>cat/etc/shadow</em></strong></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">/etc/shadow;  密码信息;</span><br><span class="line">bin:*:18353:0:99999:7:::</span><br><span class="line">字段1：用户名</span><br><span class="line">字段2：通过sha-512加密(二次加密，在经过第一次加密后，第二次加入随机数再次加密)的密码</span><br><span class="line">字段3：最后一次修改密码距离1970年1月1日的天数间隔</span><br><span class="line">字段4：密码最短有效期</span><br><span class="line">字段5：密码最长有效期</span><br><span class="line">字段6：密码过期前几天进行警告</span><br><span class="line">字段7：账户过期后，被锁定的天数</span><br><span class="line">字段8：账号失效时间距离1970年1月1日的天数间隔</span><br><span class="line">字段9：未分配功能</span><br><span class="line"></span><br><span class="line">ps: 字段2是用户的密码位，如果是 * 表示该用户禁用，!! 表示用户密码未初始化，如果为空，表示空密码的</span><br></pre></td></tr></table></figure><ol start="3"><li><strong>查看用户组信息的命令：<em>cat/etc/group</em></strong></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">组信息的显示有四个字段:</span><br><span class="line">字段1：组名称 --&gt; root</span><br><span class="line">字段2：组密码占位符  --&gt; x</span><br><span class="line">字段3：gid --&gt; 0</span><br><span class="line">字段4：组成员</span><br></pre></td></tr></table></figure><p><font color='red'>ps</font>:一个用户只能有一个主要组，最多可以有31个附加组。主要组是用户创建文件时默认的所有组，附加组主要用于权限管理。不论用户属于哪个组，用户都能拥有该组的权限。</p><p><font color='blue'><strong>特殊组wheel</strong></font>：在Linux中有一个特殊组<font color='red'>wheel</font>，wheel组就类似于一个管理员的组。在linux中，即使我们有系统管理员root的权限，也不推荐用root用户登录。一般情况下用普通用户登录就可以了，在需要root权限执行一些操作时，再su登录成为root用户。但是，任何人只要知道了root用户的密码，就都可以通过su命令来登录为root用户–这无疑为系统带来了安全隐患。所以，将普通用户加入到wheel组中，被加入的这个普通用户就成了管理员组内的用户了，然后可以修改配置文件使得只有wheel组内的用户可以切换到root用户。</p><hr><h2 id="3-用户和用户组的管理"><a href="#3-用户和用户组的管理" class="headerlink" title="3. 用户和用户组的管理"></a>3. 用户和用户组的管理</h2><h3 id="3-1用户的创建、删除和修改"><a href="#3-1用户的创建、删除和修改" class="headerlink" title="3.1用户的创建、删除和修改"></a>3.1用户的创建、删除和修改</h3><p><strong><font color='blue'>新建用户系统会做这三件事:</font></strong></p><ol><li>新建用户时，系统会将 /etc/skel 中的目录及文件拷贝到新建用户的家目录中。</li><li>在 /var/spool/mail 中，新建用户名的邮箱 。</li><li>在 /etc下的 passwd 、shadow 、group文件中，增加用户信息</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">whoami #我是谁</span><br><span class="line">useradd #创建用户</span><br><span class="line">-u:指定UID;</span><br><span class="line">-c: 指定注释;</span><br><span class="line">-s: 指定登录shell类型; /bin/bash  /sbin/nologin;</span><br><span class="line">-G: 指定附加组;</span><br><span class="line">-a: 追加;</span><br><span class="line">-g: 指定基本组;</span><br><span class="line">-r: 指定为系统用户 (UID 201-999)</span><br><span class="line">-M: 不创建用户的家目录;</span><br><span class="line">-d：指定其家目录；</span><br><span class="line">usermod: #修改用户;选项参照useradd</span><br><span class="line">userdel: </span><br><span class="line"> 1.#删除用户</span><br><span class="line">-r: 同时删除用户以及用户家目录;</span><br><span class="line"> 2.# 有进程正在使用该用户,所以无法删除; 只有进程退出后;用户没有被占用,才可以处理;</span><br><span class="line">kill -9 [要干掉的进程ID]</span><br><span class="line">userdel username</span><br><span class="line"> 3.# 不加 -r 参数，只删除 passwd、shadow 和 group 文件中的用户信息，/home 目录下的文件不删除，/var/spool/mail/ 下的文件不删除</span><br><span class="line">   # 加 -r 参数，删除 passwd、shadow 和 group 文件中的用户信息，同时删除用户的家目录和邮箱   </span><br><span class="line">userdel -r username</span><br></pre></td></tr></table></figure><p>以下这条命令直接生成一个具有root权限的用户：venus，密码为：123qwe 。前提是这条命令的执行需要root权限。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useradd -p `openssl passwd -1 -salt &#x27;user&#x27; 123qwe` -u 0 -o -g root  -G root -s /bin/bash -d /home/user venus</span><br></pre></td></tr></table></figure><p><font color='red'>注</font>：用户创建时，默认的属性（比如UID，GID，是否创建家目录，创建邮箱等）都是通过/etc/login.defs文件控制的，修改此文件的属性，会影响以后创建的所有用户。也可以创建用户时指定参数修改，这样只对当前创建用户有效</p><p><strong><font color='blue'>删除用户：</font></strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">userdel  -r  james  #删除用户一定记得加 -r 参数 ！！</span><br></pre></td></tr></table></figure><ol><li>不加 -r 参数，只删除 passwd、shadow 和 group 文件中的用户信息，/home 目录下的文件不删除，/var/spool/mail/ 下的文件不删除。</li><li>加 -r 参数，删除 passwd、shadow 和 group 文件中的用户信息，同时删除用户的家目录和邮箱。</li></ol><p><strong><font color='blue'>修改用户属性：</font></strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">usermod   参数   james</span><br><span class="line"></span><br><span class="line">-s 修改用户的登陆shell   usermod -s /sbin/nologin james </span><br><span class="line">-L 账户锁定  (可以通过 passwd -S  账户名 查看账户的状态)</span><br><span class="line">-U 解锁账户</span><br><span class="line">-g  修改账户所在组   例：将bob所在组改成james：usermod  -g  james   bob   </span><br><span class="line">-G  给账户添加附加组  例：给bob添加一个附加组john：usermod  -G  john  bob；从附加组john中删除用户bob：gpasswd -d  bob  john</span><br><span class="line">-a  默认情况下，当用户已经存在附加组时，再添加附加组则会把之前的附加组给替换了，加 -a 参数，则不替换原来的附加组，意味着该用户可以有多个附加组。</span><br></pre></td></tr></table></figure><p><strong><font color='blue'>锁定和解锁用户：</font></strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">锁定用户：usermod -L www    或   passwd -l www</span><br><span class="line">解锁用户：usermod -U www   或   passwd -u www</span><br><span class="line">查看用户状态：passwd -S www</span><br><span class="line"></span><br><span class="line">注：虽然 usermod 和 passwd 这两个命令都可以锁定和解锁用户，但是还是有区别的。区别之一就是passwd命令操作完后会有提示。还有一个区别就是 passwd 的权限比 usermod 大，使用 usermod 锁定的用户可以用 passwd 来解锁，但是使用 passwd 锁定的用户不能用 usermod 来解锁</span><br></pre></td></tr></table></figure><h3 id="3-2-用户密码修改"><a href="#3-2-用户密码修改" class="headerlink" title="3.2 用户密码修改"></a>3.2 用户密码修改</h3><ul><li><p>修改命令使用passwd来实现：</p><p>1.超级管理员:</p><pre><code>        1.1) 随意修改任何人的密码;        1.2) 密码强度可以随意;</code></pre><p>2.普通用户执行:</p><pre><code>        2.1) 仅修改自己的密码,不可以修改其他人;        2.2) 密码强度必须满足8个字符及以上;</code></pre><p>3.passwd使用方法:</p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">1.交互式修改密码：</span><br><span class="line">passwd username</span><br><span class="line">2.非交互式修改密码：</span><br><span class="line">echo &quot;passwd&quot; | passwd --stdin username</span><br><span class="line">Changing password for user jack.</span><br><span class="line">passwd: all authentication tokens updated successfully.</span><br><span class="line">如果想要设置强度较高的密码需要安装 </span><br><span class="line"><span class="meta">#</span><span class="bash">yum install -y expect</span> </span><br><span class="line"><span class="meta">#</span><span class="bash"> -l 长度</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> -d 数字</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> -c 小写</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> -C 大写</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> -s 特殊字符</span></span><br><span class="line">mkpasswd -l 10 -d 3 -c 3 -C 3 -s 1</span><br><span class="line">Y44ssjSG0,</span><br><span class="line">echo &quot;$(mkpasswd -l 10 -d 3 -c 3 -C 3 -s 1)&quot; | tee ok.txt | passwd --stdin tom</span><br><span class="line">Changing password for user jack.</span><br><span class="line">passwd: all authentication tokens updated successfully.</span><br><span class="line">[root@tom /]# cat ok.txt </span><br><span class="line">1hNOp*H63y</span><br><span class="line"><span class="meta">#</span><span class="bash">tee -a //追加</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">生成密码的方法</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">方法1</span> </span><br><span class="line"> mkpasswd -l 16  #16位密码</span><br><span class="line"><span class="meta"> </span></span><br><span class="line"><span class="meta"> #</span><span class="bash">方法2</span></span><br><span class="line"> echo  $RANDOM|md5sum |head -c16</span><br><span class="line"> RANDOM 系统变量(环境变量) 生成随机数字 </span><br><span class="line"><span class="meta"> </span></span><br><span class="line"><span class="meta"> #</span><span class="bash">方法3 date</span> </span><br><span class="line"> date +%N |md5sum  |head -c16</span><br><span class="line"><span class="meta"> </span></span><br><span class="line"><span class="meta"> #</span><span class="bash">方法4  了解</span></span><br><span class="line"> [root@oldboyedu ~]# echo  123  |tr 123 abc</span><br><span class="line">abc</span><br><span class="line">[root@oldboyedu ~]# </span><br><span class="line">[root@oldboyedu ~]# echo  123123  |tr 123 abc</span><br><span class="line">abcabc</span><br><span class="line">[root@oldboyedu ~]# echo  112233  |tr 123 abc</span><br><span class="line">aabbcc</span><br><span class="line">[root@oldboyedu ~]# #1对1的替换 </span><br><span class="line">[root@oldboyedu ~]# #tr 替换  </span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">tr 生成随机字符 (删除)</span></span><br><span class="line">-d 删除</span><br><span class="line">-c 取反</span><br><span class="line">tr -cd  &#x27;0-9&#x27;  &lt;/dev/urandom |head -c16</span><br><span class="line">tr -cd  &#x27;a-zA-Z0-9&#x27;  &lt;/dev/urandom |head -c16</span><br></pre></td></tr></table></figure><p>注：借助chage指令，可以修改用户的密码策略，也可通过编辑 /etc/shadow (不建议)</p><p>​        比如：chage  -l  bob，查看用户bob的密码策略</p><p>​       chage -M 90 bob，将用户bob的密码有效期修改为90天</p><p>​        脚本实现修改用户的密码策略</p><ul><li><font color='red'><strong>练习：</strong></font></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1.#批量创建10个用户oldboy01..oldboy10,并设置123456为密码(不能用循环等语句,如for,while等)</span><br><span class="line">echo oldboy&#123;01..10&#125;|xargs -n1|sed -r &#x27;s#(.*)#useradd \1; echo 123456|passwd --stdin \1#g&#x27;|bash</span><br><span class="line"></span><br><span class="line">2.#批量创建10个用户oldboy01..oldboy10,并设置随机8为密码(不能用循环等语句,如for,while等)</span><br><span class="line">echo oldboy&#123;11..20&#125; |xargs -n1|sed -r &#x27;s#(.*)#useradd \1;p=`mkpasswd -l 8`;echo $p|passwd --stdin \1;echo \1 $p&gt;&gt;/root/pass.txt#g&#x27; |bash</span><br></pre></td></tr></table></figure><h3 id="3-3用户组管理"><a href="#3-3用户组管理" class="headerlink" title="3.3用户组管理"></a>3.3用户组管理</h3><p><strong><font color='blue'>添加组：</font></strong> groupadd www</p><ol><li> -g, –gid                      为新组使用 GID，例 groupadd -g 2000 xie  创建新组xie，并且gid设置为2000</li><li> -K, –key                    不使用 /etc/login.defs 中的默认值</li><li> -o, –non-unique      允许创建有重复 GID 的组</li><li> -p, –password         为新组使用此加密过的密码</li><li> -r, –system               创建一个系统账户</li></ol><p><strong><font color='blue'>删除组：</font></strong> groupdel www</p><p> -r , –remove                    删除主目录和邮件池</p><p><strong><font color='blue'>修改组的属性： </font></strong> groupmod www</p><p> -g, –gid GID                    将组 ID 改为 GID<br>         -n, –new-name             改名为 NEW_GROUP<br>         -o, –non-unique           允许使用重复的 GID</p><p><strong><font color='blue'>修改组中的用户：groupmems： </font></strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">groupmems   -a  john  -g  www    将用户john加到www组中</span><br><span class="line">groupmems   -d  john  -g  www    将用户john从xie组中移除 或 gpasswd -d  john  www</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 主题 </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2021/07/13/hello-world/"/>
      <url>/2021/07/13/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
